{
  "contentVersion": "1.0.0.0",
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "parameters": {
    "azureMLEndpoint": {
      "type": "string",
      "metadata": {
        "description": "URL of the AML BES web service"
      }
    },
    "azureMLApiKey": {
      "type": "string",
      "metadata": {
        "description": "API Key of the AML web service"
      }
    },
    "onpremSQLServerName": {
      "type": "string",
      "metadata": {
        "description": "SQL Server name"
      }
    },
    "onpremSQLServerUserName": {
      "type": "string",
      "metadata": {
        "description": "SQL Server user name"
      }
    },
    "onpremSQLServerPassword": {
      "type": "string",
      "metadata": {
        "description": "SQL Server password"
      }
    },
    "onpremSQLServerDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "SQL Server database name"
      }
    }
  },
  "variables": {
    "dfVersion": "[providers('Microsoft.DataFactory', 'datafactories').apiVersions[0]]",
    "dataFactoryName": "[concat(variables('uniqueNamePrefix'),'ADF')]",
    "adfLocation": "North Europe",
    "namePrefix": "[resourceGroup().name]",
    "sfVersion": "2016-03-01",
    "wsVersion": "2016-03-01",
    "mlVersion": "2016-04-01",
    "sbVersion": "2014-09-01",
    "stgVersion": "2015-06-15",
    "location": "[resourceGroup().location]",
    "uniqueNamePrefix": "[toLower(concat(variables('namePrefix'), uniqueString(subscription().subscriptionId)))]",
	"storageAccountName": "[variables('uniqueNamePrefix')]",
    "stgResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "storageAccountType": "Standard_LRS",
    "webJobSiteName": "[concat(variables('uniqueNamePrefix'), 'ws')]",
    "datageneratorJobName": "DataGenerator",
    "InitDBJobName": "CreateTablesInDB",
    "MLExperimentJobName": "GalleryToMlWebSvc",
    "StartPipelineJobName": "StartPipelines",
    "webSitePackageUrl": "https://bostoncaqs.blob.core.windows.net/sqldatawarehouseaml/SQLDWTutorialWebApp.zip",
    "hostingPlanName": "[concat(variables('uniqueNamePrefix'), 'hostingplan')]",
    "appspsku": "Standard",
    "workerSize": "1",
    "sfResourceId": "[resourceId('Microsoft.Web/serverFarms', variables('hostingPlanName'))]",
    "nsResourceId": "[resourceId('Microsoft.Eventhub/namespaces', concat('servicebus',variables('namePrefix')))]",
    "mlWorkspaceName": "[concat(variables('namePrefix'),'mlwk')]",
    "mlResourceId": "[resourceId('Microsoft.MachineLearning/workspaces', variables('mlWorkspaceName'))]",
    "namespaceName": "[concat(variables('uniqueNamePrefix'),'ns')]",
    "ingestEventHubName": "[concat(variables('namePrefix'),'eh')]",
    "sbKeyName": "RootManageSharedAccessKey",
    "sbKeyResourceId": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('namespaceName'), variables('sbKeyName'))]",
    "sbResourceId": "[resourceId('Microsoft.Eventhub/namespaces', variables('namespaceName'))]",
    "sqlServerName": "[concat(variables('uniqueNamePrefix'),'srv')]",
    "sqlDatabaseName": "personalDB",
    "sqlServerUserName": "personaluser",
    "sqlServerPassword": "pass@word1",
    "sqlLocation": "[variables('location')]",
    "sqlMaxSizeBytes": "2147483648",
    "sqlStartIpAddress": "0.0.0.0",
    "sqlEndIpAddress": "255.255.255.255",
    "sqlEdition": "DataWarehouse",
    "sqlCollation": "SQL_Latin1_General_CP1_CI_AS",
    "requestedServiceObjectiveName": "DW400",
    "dfResourceId": "[resourceId('Microsoft.DataFactory/datafactories', variables('dataFactoryName'))]",
    "azureSqlDWLinkedServiceName": "AzureSqlDWLinkedService",
    "azureMLLinkedServiceName": "AzureMLLinkedService",
    "onPremSqlServerLinkedServiceName": "OnPremSqlServerLinkedService",
    "azureSqlDWLinkedServiceResourceId": "[resourceId('Microsoft.DataFactory/dataFactories/linkedServices', variables('dataFactoryName'), variables('azureSqlDWLinkedServiceName'))]",
    "azureMLLinkedServiceResourceId": "[resourceId('Microsoft.DataFactory/dataFactories/linkedServices', variables('dataFactoryName'), variables('azureMLLinkedServiceName'))]",
    "onPremSqlServerLinkedServiceResourceId": "[resourceId('Microsoft.DataFactory/dataFactories/linkedServices', variables('dataFactoryName'), variables('onPremSqlServerLinkedServiceName'))]",
    "azureSqlDWInputDatasetName": "AzureSqlDWInputRealtimeRating",
    "azureSqlDWOutputDatasetName": "AzureSqlDWOutputAverageRating",
    "azureSqlServerDBInputDatasetName": "AzureSqlServerDBInput",
    "onPremInputDataSetnameHR": "SqlServerDBInputHistoryRating",
    "onPremInputDataSetnameHAR": "SqlServerDBInputHistoryAvgRating",
    "azureOutputDataSetnameHR": "AzureSqlServerDWOutputHistoryRating",
    "azureOutputDatasetNameHAR": "AzureSqlServerDWOutputHistoryAvgRating",
    "sqlSettings2": {
      "sqlServerName": "[parameters('onpremSQLServerName')]",
      "sqlServerDatabaseName": "[parameters('onpremSQLServerDatabaseName')]",
      "sqlServerUserName": "[parameters('onpremSQLServerUserName')]",
      "sqlServerPassword": "[parameters('onpremSQLServerPassword')]"
    }
  },
  "resources": [
    {
      "apiVersion": "[variables('dfVersion')]",
      "type": "Microsoft.DataFactory/datafactories",
      "name": "[variables('dataFactoryName')]",
      "location": "[variables('adfLocation')]",
      "resources": [
        {
          "apiVersion": "[variables('dfVersion')]",
          "type": "linkedservices",
          "name": "[variables('azureSqlDWLinkedServiceName')]",
          "dependsOn": [
            "[variables('dfResourceId')]"
          ],
          "properties": {
            "type": "AzureSqlDW",
            "typeProperties": {
              "connectionString": "[concat('Server=tcp:',variables('sqlServerName'),'.database.windows.net,1433;Initial Catalog=', variables('sqlDatabaseName'),';Integrated Security=False;User ID=',variables('sqlServerUserName'),';Password=',variables('sqlServerPassword'), ';Connect Timeout=30;Encrypt=True')]"
            }
          }
        },
        {
          "apiVersion": "[variables('dfVersion')]",
          "type": "linkedservices",
          "name": "[variables('azureMLLinkedServiceName')]",
          "dependsOn": [
            "[variables('dfResourceId')]"
          ],
          "properties": {
            "type": "AzureML",
            "typeProperties": {
              "mlEndpoint": "[concat(parameters('azureMLEndpoint'),'/jobs/')]",
              "apiKey": "[parameters('azureMLApiKey')]"
            }
          }
        },
        {
          "apiVersion": "[variables('dfVersion')]",
          "type": "datasets",
          "dependsOn": [
            "[variables('dfResourceId')]",
            "[variables('azureSqlDWLinkedServiceResourceId')]"
          ],
          "name": "[variables('azureSqlDWInputDatasetName')]",
          "properties": {
            "published": false,
            "type": "AzureSqlDWTable",
            "linkedServiceName": "[variables('azureSqlDWLinkedServiceName')]",
            "typeProperties": {
              "tableName": "Ratings"
            },
            "availability": {
              "frequency": "Minute",
              "interval": 15
            },
            "external": true
          }
        },
        {
          "apiVersion": "[variables('dfVersion')]",
          "type": "datasets",
          "dependsOn": [
            "[variables('dfResourceId')]",
            "[variables('azureSqlDWLinkedServiceResourceId')]"
          ],
          "name": "[variables('azureSqlDWOutputDatasetName')]",
          "properties": {
            "published": false,
            "type": "AzureSqlDWTable",
            "linkedServiceName": "[variables('azureSqlDWLinkedServiceName')]",
            "typeProperties": {
              "tableName": "AverageRatings"
            },
            "availability": {
              "frequency": "Minute",
              "interval": 15
            }
          }
        },
		{
          "apiVersion": "[variables('dfVersion')]",
          "type": "datasets",
          "dependsOn": [
            "[variables('dfResourceId')]",
            "[variables('azureSqlDWLinkedServiceResourceId')]"
          ],
          "name": "AzureSqlDWOutputPrediction",
          "properties": {
            "published": false,
            "type": "AzureSqlDWTable",
            "linkedServiceName": "[variables('azureSqlDWLinkedServiceName')]",
            "typeProperties": {
              "tableName": "RatingPrediction"
            },
            "availability": {
              "frequency": "Minute",
              "interval": 15
            }
          }
        },
		{
          "apiVersion": "[variables('dfVersion')]",
          "name": "AverageRatingGeneration",
          "dependsOn": [
            "[variables('dfResourceId')]",
            "[variables('azureMLLinkedServiceResourceId')]",
            "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/datasets/', variables('azureSqlDWInputDatasetName'))]",
            "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/datasets/', variables('azureSqlDWOutputDatasetName'))]"
          ],
          "type": "datapipelines",
          "properties": {
            "description": "generate_average_rating",
            "activities": [
              {
                "type": "SqlServerStoredProcedure",
                "typeProperties": {
                    "storedProcedureName": "dbo.sp_generate_average_rating",
                    "storedProcedureParameters": {
                        "starttime": "$$Text.Format('{0:yyyy-MM-dd HH:mm:ss}', WindowStart)",
                        "endtime": "$$Text.Format('{0:yyyy-MM-dd HH:mm:ss}', WindowEnd)"
                    }
                },
                "inputs": [
                  {
                    "name": "[variables('azureSqlDWInputDatasetName')]"
                  }
                ],
                "outputs": [
                  {
                    "name": "[variables('azureSqlDWOutputDatasetName')]"
                  }
                ],
                "policy": {
                  "timeout": "00:05:00",
                  "concurrency": 1,
                  "retry": 3
                },
                "scheduler": {
                  "frequency": "Minute",
                  "interval": 15
                },
                "name": "generate_average_rating"
              }
            ],
            "start": "2016-05-01T00:00:00Z",
            "end": "9999-09-09T00:00:00Z",
            "isPaused": true,
            "pipelineMode": "Scheduled"
          }
        },
        {
          "apiVersion": "[variables('dfVersion')]",
          "name": "SQL-to-AML-to-SQL",
          "dependsOn": [
            "[variables('dfResourceId')]",
            "[variables('azureMLLinkedServiceResourceId')]",
            "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/datasets/', 'AzureSqlDWOutputPrediction')]",
            "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/datasets/', variables('azureSqlDWOutputDatasetName'))]"
          ],
          "type": "datapipelines",
          "properties": {
            "description": "SQL to AML to SQL",
            "activities": [
              {
                "type": "AzureMLBatchScoring",
                "typeProperties": {
                  "webServiceParameters": {
                    "Database server name": "[concat(variables('sqlServerName'),'.database.windows.net')]",
                    "Database name": "[variables('sqlDatabaseName')]",
                    "User name": "[variables('sqlServerUserName')]",
                    "Password": "[variables('sqlServerPassword')]",
                     "Database query": "$$Text.Format('DELETE FROM RatingPrediction WHERE DateTimeStart BETWEEN  \\'{0:yyyy-MM-dd HH:mm:ss}\\' AND dateadd(minute, 15, \\'{0:yyyy-MM-dd HH:mm:ss}\\'); WITH Numbers AS ( SELECT TOP (180) n = CONVERT(INT, ROW_NUMBER() OVER (ORDER BY s1.[object_id])) - 1 FROM sys.all_objects AS s1 CROSS JOIN sys.all_objects AS s2 ) SELECT DateTimeStart, AVG(AverageRating) AS AverageRating FROM ( SELECT DATEADD(MINUTE, -n, \\'{0:yyyy-MM-dd HH:mm:ss}\\') AS DateTimeStart, ISNULL(AverageRating, 0) AS AverageRating FROM Numbers LEFT OUTER JOIN (select DateTimeStart,AverageRating from  AverageRatings WHERE DateTimeStart BETWEEN DATEADD(MINUTE, -180, \\'{0:yyyy-MM-dd HH:mm:ss}\\') AND \\'{0:yyyy-MM-dd HH:mm:ss}\\' AND EventId=\\'1\\') AverageRatingsFiltered ON DATEADD(MINUTE, -n, \\'{0:yyyy-MM-dd HH:mm:ss}\\') = AverageRatingsFiltered.DateTimeStart) temp GROUP BY DateTimeStart  ORDER BY DateTimeStart ASC', WindowEnd)"
                    }
                },
                "inputs": [
                  {
                    "name": "[variables('azureSqlDWOutputDatasetName')]"
                  }
                ],
                "outputs": [
                  {
                    "name": "AzureSqlDWOutputPrediction"
                  }
                ],
                "policy": {
                  "timeout": "00:05:00",
                  "concurrency": 1,
                  "retry": 3
                },
                "scheduler": {
                  "frequency": "Minute",
                  "interval": 15
                },
                "name": "MLActivity",
                "description": "prediction analysis on batch input",
                "linkedServiceName": "[variables('azureMLLinkedServiceName')]"
              }
            ],
            "start": "2016-05-01T00:00:00Z",
            "end": "9999-09-09T00:00:00Z",
            "isPaused": true,
            "pipelineMode": "Scheduled"
          }
        },
        {
          "apiVersion": "[variables('dfVersion')]",
          "type": "datasets",
          "dependsOn": [
            "[variables('dfResourceId')]",
            "[variables('azureMLLinkedServiceResourceId')]"
          ],
          "name": "[variables('azureOutputDataSetnameHR')]",
          "properties": {
            "published": false,
            "type": "AzureSqlDWTable",
            "linkedServiceName": "[variables('azureSqlDWLinkedServiceName')]",
            "typeProperties": {
              "tableName": "Ratings"
            },
            "availability": {
              "frequency": "Day",
              "interval": 1
            }
          }
        },
        {
          "apiVersion": "[variables('dfVersion')]",
          "type": "datasets",
          "dependsOn": [
            "[variables('dfResourceId')]",
            "[variables('azureSqlDWLinkedServiceResourceId')]"
          ],
          "name": "[variables('azureOutputDataSetnameHAR')]",
          "properties": {
            "published": false,
            "type": "AzureSqlDWTable",
            "linkedServiceName": "[variables('azureSqlDWLinkedServiceName')]",
            "typeProperties": {
              "tableName": "AverageRatings"
            },
            "availability": {
              "frequency": "Day",
              "interval": 1
            }
          }
        },


          {
            "apiVersion": "[variables('dfVersion')]",
            "type": "linkedservices",
            "name": "[variables('onPremSqlServerLinkedServiceName')]",
            "dependsOn": [
              "[variables('dfResourceId')]"
            ],
            "properties": {
              "type": "OnPremisesSqlServer",
              "typeProperties": {
                "connectionString": "[concat('Server=',parameters('onpremSQLServerName'),';Initial Catalog=',parameters('onpremSQLServerDatabaseName'),';Integrated Security=False;User ID=',parameters('onpremSQLServerUserName'),';Password=',parameters('onpremSQLServerPassword'))]",
                "gatewayName": "[concat('datagateway-',resourceGroup().name)]"
              }
            }
          },
          {
            "apiVersion": "[variables('dfVersion')]",
            "type": "datasets",
            "dependsOn": [
              "[variables('dfResourceId')]",
              "[variables('onPremSqlServerLinkedServiceResourceId')]"
            ],
            "name": "[variables('onPremInputDataSetnameHR')]",
            "properties": {
              "published": false,
              "type": "SqlServerTable",
              "linkedServiceName": "[variables('onPremSqlServerLinkedServiceName')]",
              "typeProperties": {
                "tableName": "Ratings"
              },
              "availability": {
                "frequency": "Day",
                "interval": 1
              },
              "external": true
            }
          },
          {
            "apiVersion": "[variables('dfVersion')]",
            "type": "datasets",
            "dependsOn": [
              "[variables('dfResourceId')]",
              "[variables('onPremSqlServerLinkedServiceResourceId')]"
            ],
            "name": "[variables('onPremInputDataSetnameHAR')]",
            "properties": {
              "published": false,
              "type": "SqlServerTable",
              "linkedServiceName": "[variables('onPremSqlServerLinkedServiceName')]",
              "typeProperties": {
                "tableName": "AverageRatings"
              },
              "availability": {
                "frequency": "Day",
                "interval": 1
              },
              "external": true
            }
          },
          {
            "apiVersion": "[variables('dfVersion')]",
            "name": "OnPremSQLDB-to-SQLDW",
            "dependsOn": [
              "[variables('dfResourceId')]",
              "[variables('azureSqlDWLinkedServiceResourceId')]",
              "[variables('onPremSqlServerLinkedServiceName')]",
              "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/datasets/', variables('azureOutputDataSetnameHR'))]",
              "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/datasets/', variables('azureOutputDatasetNameHAR'))]",
              "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/datasets/', variables('onPremInputDataSetnameHR'))]",
              "[concat('Microsoft.DataFactory/dataFactories/', variables('dataFactoryName'), '/datasets/', variables('onPremInputDataSetnameHAR'))]"
            ],
            "type": "datapipelines",
            "properties": {
              "description": "On Prem SQL Server DB to Azure SQL Server Data Warehouse",
              "activities": [
                {
                  "type": "Copy",
                  "typeProperties": {
                    "source": {
                      "type": "SqlSource",
                      "sqlReaderQuery": "select * from Ratings"
                    },
                    "sink": {
                      "type": "SqlSink",
                      "writeBatchSize": 1000,
                      "writeBatchTimeout": "00:30:00"
                    }
                  },
                  "inputs": [
                    {
                      "name": "[variables('onPremInputDataSetnameHR')]"
                    }
                  ],
                  "outputs": [
                    {
                      "name": "[variables('azureOutputDataSetnameHR')]"
                    }
                  ],
                  "policy": {
                    "timeout": "01:00:00",
                    "concurrency": 1,
                    "executionPriorityOrder": "NewestFirst"
                  },
                  "scheduler": {
                    "frequency": "Day",
                    "interval": 1
                  },
                  "name": "Activity-OnPremSQLToAzureSQLDW-HistoricalRatings"
                },
                {
                  "type": "Copy",
                  "typeProperties": {
                    "source": {
                      "type": "SqlSource",
                      "sqlReaderQuery": "select * from AverageRatings"
                    },
                    "sink": {
                      "type": "SqlSink",
                      "writeBatchSize": 1000,
                      "writeBatchTimeout": "00:30:00"
                    }
                  },
                  "inputs": [
                    {
                      "name": "[variables('onPremInputDataSetnameHAR')]"
                    }
                  ],
                  "outputs": [
                    {
                      "name": "[variables('azureOutputDatasetNameHAR')]"
                    }
                  ],
                  "policy": {
                    "timeout": "01:00:00",
                    "concurrency": 1,
                    "executionPriorityOrder": "NewestFirst",
                    "style": "StartOfInterval"
                  },
                  "scheduler": {
                    "frequency": "Day",
                    "interval": 1
                  },
                  "name": "Activity-OnPremSQLToAzureSQLDW-HistoricalAverageRatings"
                }
              ],
              "start": "2016-04-05T00:00:00Z",
              "end": "2016-04-05T23:59:59Z",
              "isPaused": true,
              "pipelineMode": "Scheduled"
            }
          }
        ]
      }
      ]
    }